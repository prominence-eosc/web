"use strict";(self.webpackChunkprominence=self.webpackChunkprominence||[]).push([[157],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>b});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,b=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(b,a(a({ref:n},p),{},{components:t})):r.createElement(b,a({ref:n},p))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:10},a="Generating JSON",s={unversionedId:"jobs/generating-json",id:"jobs/generating-json",title:"Generating JSON",description:"When prominence create is run with the --dry-run option, the job will not be submitted but the JSON description of the job will be printed to standard output. For example:",source:"@site/docs/jobs/generating-json.md",sourceDirName:"jobs",slug:"/jobs/generating-json",permalink:"/docs/jobs/generating-json",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Labels",permalink:"/docs/jobs/labels"},next:{title:"Policies",permalink:"/docs/jobs/policies"}},l={},c=[{value:"Multiple tasks in a single job",id:"multiple-tasks-in-a-single-job",level:2}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generating-json"},"Generating JSON"),(0,o.kt)("p",null,"When prominence create is run with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--dry-run")," option, the job will not be submitted but the JSON description of the job will be printed to standard output. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ prominence create --dry-run --name test1 --cpus 4 --memory 8 --disk 20 busybox\n{\n  "resources": {\n    "memory": 8,\n    "cpus": 4,\n    "nodes": 1,\n    "disk": 20\n  },\n  "name": "test1",\n  "tasks": [\n    {\n      "image": "busybox",\n      "runtime": "singularity"\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"If the JSON output is saved in a file it be submitted to PROMINENCE using the ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," command, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ prominence run <filename.json>\n")),(0,o.kt)("p",null,"The job description can also be a URL rather than a file, e.g."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"   $ prominence run <https://.../filename.json>\n")),(0,o.kt)("h2",{id:"multiple-tasks-in-a-single-job"},"Multiple tasks in a single job"),(0,o.kt)("p",null,"By default a job will run a single command inside a single container. However, it is possible to instead run multiple sequential tasks within a single job. Each task will have access to the same temporary storage, so transient files generated by one task are accessible by other tasks."),(0,o.kt)("p",null,"To run multiple tasks it is necessary to construct a JSON description of the job. For example, in this job there are two sequential tasks:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "resources": {\n    "memory": 1,\n    "cpus": 1,\n    "nodes": 1,\n    "disk": 10\n  },\n  "name": "multiple-tasks",\n  "tasks": [\n    {\n      "image": "centos:7",\n      "runtime": "singularity",\n      "cmd": "cat /etc/redhat-release"\n    },\n    {\n      "image": "centos:8",\n      "runtime": "singularity",\n      "cmd": "cat /etc/redhat-release"\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Use of JSON job descriptions is also necessary to run workflows, which we will come to next."))}u.isMDXComponent=!0}}]);