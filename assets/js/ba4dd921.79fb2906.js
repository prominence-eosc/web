"use strict";(self.webpackChunkprominence=self.webpackChunkprominence||[]).push([[366],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1224:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2},o="Images",l={unversionedId:"containers/images",id:"containers/images",title:"Images",description:"The image can be specified in the following ways:",source:"@site/docs/containers/images.md",sourceDirName:"containers",slug:"/containers/images",permalink:"/docs/containers/images",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Containers",permalink:"/docs/containers/"},next:{title:"Tips for creating containers",permalink:"/docs/containers/tips"}},s={},c=[{value:"Registry authentication",id:"registry-authentication",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"images"},"Images"),(0,i.kt)("p",null,"The image can be specified in the following ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<user>/<repo>:<tag>")," (Docker Hub)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<hostname>/<project-id>/<image>:<tag>")," (Google Container Registry)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"shub://<user>/<repo>:<tag>")," (Singularity Hub)"),(0,i.kt)("li",{parentName:"ul"},"URL of a tarball created by ",(0,i.kt)("inlineCode",{parentName:"li"},"docker save")),(0,i.kt)("li",{parentName:"ul"},"URL of a Singularity image"),(0,i.kt)("li",{parentName:"ul"},"path of a tarball created by ",(0,i.kt)("inlineCode",{parentName:"li"},"docker save")," when remote storage is attached to jobs"),(0,i.kt)("li",{parentName:"ul"},"path of a Singularity image when remote storage is attached to jobs")),(0,i.kt)("p",null,"Container registries other than Docker Hub may also work. It is possible to provide credentials to use for authenticating with a registry."),(0,i.kt)("p",null,"Under some conditions a container runtime will be selected automatically. This will only happen if there is only one runtime which will work for the specified image. For other cases, e.g. a Docker Hub image, Singularity is used as the default but optionally udocker can be forced by the user."),(0,i.kt)("p",null,"Images which will result in Singularity being selected:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Singularity Hub image (begins with ",(0,i.kt)("inlineCode",{parentName:"li"},"shub://"),")"),(0,i.kt)("li",{parentName:"ul"},"URL for a Singularity image (filename ends in ",(0,i.kt)("inlineCode",{parentName:"li"},".sif")," or ",(0,i.kt)("inlineCode",{parentName:"li"},".simg"),")")),(0,i.kt)("p",null,"Images which will result in udocker being selected:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"URL for a Docker tarball (filename ends in ",(0,i.kt)("inlineCode",{parentName:"li"},".tar"),")")),(0,i.kt)("p",null,"Generally it is recommended to use Singularity. If it is essential to be able to write into the container's filesystem (e.g ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"/var"),") then udocker should be used."),(0,i.kt)("h2",{id:"registry-authentication"},"Registry authentication"),(0,i.kt)("p",null,"If a registry requires authentication then ",(0,i.kt)("inlineCode",{parentName:"p"},"imagePullCredential")," must be specified in the task, which defines a ",(0,i.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"token"),". For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "resources": {\n    "memory": 1,\n    "cpus": 1,\n    "nodes": 1,\n    "disk": 10\n  },\n  "name": "gitlab-image",\n  "tasks": [\n    {\n      "image": "registry.gitlab.com/mynamespace/myproject/image:rc1",\n      "runtime": "singularity",\n      "imagePullCredential": {\n        "username": "username",\n        "token": "VzIxo3sZ2yC6V5YeSBxR"\n      }\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"The same method can be used for other private registries and Docker Hub. It is preferable that a token with read-only privileges is used rather than a password if at all possible."))}p.isMDXComponent=!0}}]);