"use strict";(self.webpackChunkprominence=self.webpackChunkprominence||[]).push([[100],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(r),f=i,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||l;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,o=new Array(l);o[0]=f;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5174:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const l={sidebar_position:3},o="Main features",a={unversionedId:"introduction/features",id:"introduction/features",title:"Main features",description:"Flexible submission",source:"@site/docs/introduction/features.md",sourceDirName:"introduction",slug:"/introduction/features",permalink:"/docs/introduction/features",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"About",permalink:"/docs/introduction/about"},next:{title:"Workflows, jobs and tasks",permalink:"/docs/introduction/workflows-jobs-tasks"}},u={},s=[{value:"Flexible submission",id:"flexible-submission",level:3},{value:"Reliability and reproducibility",id:"reliability-and-reproducibility",level:3},{value:"Multi-cloud native",id:"multi-cloud-native",level:3},{value:"Workflows",id:"workflows",level:3},{value:"MPI ready",id:"mpi-ready",level:3}],c={toc:s};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"main-features"},"Main features"),(0,i.kt)("h3",{id:"flexible-submission"},"Flexible submission"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Submit jobs using a simple batch system style command line interface which can be installed anywhere"),(0,i.kt)("li",{parentName:"ul"},"Interact programmatically from any language using a RESTful API"),(0,i.kt)("li",{parentName:"ul"},"Submit jobs from any Jupyter notebook")),(0,i.kt)("h3",{id:"reliability-and-reproducibility"},"Reliability and reproducibility"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All jobs are run in containers to ensure they will reliably run anywhere and are reproducible")),(0,i.kt)("h3",{id:"multi-cloud-native"},"Multi-cloud native"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go beyond a single cloud and leverage the resources and features available across many clouds")),(0,i.kt)("p",null,"###\xa0Invisible infrastructure"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All infrastructure provisioning is handled completely automatically and is totally transparent to the user")),(0,i.kt)("h3",{id:"workflows"},"Workflows"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Construct complex workflows by specifying the dependencies between different jobs"),(0,i.kt)("li",{parentName:"ul"},"Automatically perform parameter sweeps")),(0,i.kt)("h3",{id:"mpi-ready"},"MPI ready"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Run multi-node Open MPI, Intel MPI or MPICH jobs in addition to single-node HTC jobs")))}p.isMDXComponent=!0}}]);